/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.covidnotfound;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author alehen
 */
public class TelaGerenciarPaciente extends javax.swing.JFrame {

    /**
     * Creates new form TelaGerenciarPaciente
     */
    public TelaGerenciarPaciente() {
        super ("CovidNotFound - Gerenciamento de cadastro");
        initComponents();
        setLocationRelativeTo(null);
        obterPessoa();
    }
    
    private void obterPessoa(){
        try{
            DAO dao = new DAO();
            Pessoa[] p = dao.obterPessoa();
            buscarComboBox.setModel(new DefaultComboBoxModel<>(p));
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, "Usuários não cadastrados, tente novamente mais tarde...");
           e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cpfTextField = new javax.swing.JTextField();
        nomeTextField = new javax.swing.JTextField();
        idadeTextField = new javax.swing.JTextField();
        saudeComboBox = new javax.swing.JComboBox<>();
        enderecoTextField = new javax.swing.JTextField();
        voltarButton = new javax.swing.JToggleButton();
        cpfLabel = new javax.swing.JLabel();
        nomeLabel = new javax.swing.JLabel();
        idadeLabel = new javax.swing.JLabel();
        profissaoLabel = new javax.swing.JLabel();
        enderecoLabel = new javax.swing.JLabel();
        buscarComboBox = new javax.swing.JComboBox<>();
        atualizarButton = new javax.swing.JButton();
        novoButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        idTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 650));
        jPanel1.setLayout(null);
        jPanel1.add(cpfTextField);
        cpfTextField.setBounds(200, 110, 400, 50);
        jPanel1.add(nomeTextField);
        nomeTextField.setBounds(200, 190, 400, 50);

        idadeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idadeTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(idadeTextField);
        idadeTextField.setBounds(200, 270, 170, 50);

        saudeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--selecione--", "Sim", "Não" }));
        saudeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saudeComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(saudeComboBox);
        saudeComboBox.setBounds(430, 270, 170, 50);
        jPanel1.add(enderecoTextField);
        enderecoTextField.setBounds(200, 350, 400, 50);

        voltarButton.setText("Voltar");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(voltarButton);
        voltarButton.setBounds(440, 510, 140, 50);

        cpfLabel.setText("Cpf:");
        jPanel1.add(cpfLabel);
        cpfLabel.setBounds(200, 90, 29, 18);

        nomeLabel.setText("Nome:");
        jPanel1.add(nomeLabel);
        nomeLabel.setBounds(200, 170, 46, 18);

        idadeLabel.setText("Idade:");
        jPanel1.add(idadeLabel);
        idadeLabel.setBounds(200, 250, 42, 18);

        profissaoLabel.setText("Profissão relacionada a saúde?");
        jPanel1.add(profissaoLabel);
        profissaoLabel.setBounds(420, 250, 220, 18);

        enderecoLabel.setText("Endereço:");
        jPanel1.add(enderecoLabel);
        enderecoLabel.setBounds(200, 330, 80, 18);

        buscarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(buscarComboBox);
        buscarComboBox.setBounds(200, 30, 400, 50);

        atualizarButton.setText("Atualizar");
        atualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(atualizarButton);
        atualizarButton.setBounds(440, 440, 140, 50);

        novoButton.setText("Novo");
        novoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(novoButton);
        novoButton.setBounds(220, 440, 140, 50);

        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });
        jPanel1.add(removerButton);
        removerButton.setBounds(220, 510, 140, 50);
        jPanel1.add(idTextField);
        idTextField.setBounds(660, 150, 23, 35);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saudeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saudeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saudeComboBoxActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        TelaAdm telaadm = new TelaAdm();
        this.dispose();
        telaadm.setVisible(true); 
    }//GEN-LAST:event_voltarButtonActionPerformed

    private void idadeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idadeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idadeTextFieldActionPerformed

    private void buscarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarComboBoxActionPerformed
        Pessoa p = (Pessoa) buscarComboBox.getSelectedItem();
        idTextField.setText(Integer.toString(p.getId()));
        cpfTextField.setText(p.getCpf());
        nomeTextField.setText(p.getNome());
        idadeTextField.setText(Integer.toString(p.getIdade()));
        enderecoTextField.setText(p.getEndereco());
        if (p.isSaude() == true){
           saudeComboBox.setSelectedIndex(1);
        }
        else{
           saudeComboBox.setSelectedIndex(2);
        }
    }//GEN-LAST:event_buscarComboBoxActionPerformed

    private void atualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarButtonActionPerformed
        int id = (Integer.parseInt(idTextField.getText()));
        String cpf = cpfTextField.getText();
        String nome = nomeTextField.getText();
        String number = idadeTextField.getText();
        String endereco = enderecoTextField.getText();

        if(nome == null || nome.length() <= 2
                || endereco == null || endereco.length() <= 3 || number == null || (Integer.parseInt(number) > 150) 
                || saudeComboBox.getSelectedIndex() == 0 || cpf.equals("00000000000") 
                || cpf.equals("11111111111") || cpf.equals("22222222222")
                || cpf.equals("33333333333") || cpf.equals("44444444444") 
                || cpf.equals("55555555555") || cpf.equals("66666666666") 
                || cpf.equals("77777777777") ||cpf.equals("88888888888") 
                || cpf.equals("99999999999") || cpf.length() != 11){
            
            JOptionPane.showMessageDialog(null, "Verifique os campos e tente novamente...");
        }else{
            try{
                int idade = Integer.parseInt(number);
                int escolha = JOptionPane.showConfirmDialog(null, "Deseja atualizar o paciente?", "Atualizar", JOptionPane.YES_NO_OPTION);
                if(escolha == JOptionPane.YES_OPTION){
                    if(saudeComboBox.getSelectedItem().equals("Sim")){
                        boolean sim = true;
               
                        Pessoa p = new Pessoa(id, cpf, nome, idade, sim, endereco);
                        DAO dao = new DAO();
//                        if(dao.verificarCPFPes(p)){
//                            JOptionPane.showMessageDialog(null, "Paciente já cadastrado");
//                        }
//                        else{
                            p.definirPrioridade(p);
                            dao.atualizarPessoa(p);
                            JOptionPane.showMessageDialog(null, "Paciente atualizado com sucesso");
                            obterPessoa();
                            cpfTextField.setText("");
                            nomeTextField.setText("");
                            idadeTextField.setText("");
                            enderecoTextField.setText("");
                            saudeComboBox.setSelectedIndex(0);
                        
                    }
                    else if(saudeComboBox.getSelectedItem().equals("Não")){
                        boolean nao = false;
                        Pessoa p = new Pessoa(id, cpf, nome, idade, nao, endereco);
                        DAO dao = new DAO();
//                        if(dao.verificarCPFPes(p)){
//                            JOptionPane.showMessageDialog(null, "Paciente já cadastrada");
//                        }
//                        else{
                            p.definirPrioridade(p);
                            dao.atualizarPessoa(p);
                            JOptionPane.showMessageDialog(null, "Paciente atualizado com sucesso");
                            obterPessoa();
                            cpfTextField.setText("");
                            nomeTextField.setText("");
                            idadeTextField.setText("");
                            enderecoTextField.setText("");
                            saudeComboBox.setSelectedIndex(0);
                        }
                    
  
                }   
            }
            catch (Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Falhou. Fale com o suporte.");
            }
        }
    }//GEN-LAST:event_atualizarButtonActionPerformed

    private void novoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoButtonActionPerformed
        String cpf = cpfTextField.getText();
        String nome = nomeTextField.getText();
        String number = idadeTextField.getText();
        String endereco = enderecoTextField.getText();
        if(nome == null || nome.length() <= 2
                || endereco == null || endereco.length() <= 3 || number == null || (Integer.parseInt(number) > 150)
                || saudeComboBox.getSelectedIndex() == 0 || cpf.equals("00000000000") 
                || cpf.equals("11111111111") || cpf.equals("22222222222")
                || cpf.equals("33333333333") || cpf.equals("44444444444") 
                || cpf.equals("55555555555") || cpf.equals("66666666666") 
                || cpf.equals("77777777777") ||cpf.equals("88888888888") 
                || cpf.equals("99999999999") || cpf.length() != 11){
            JOptionPane.showMessageDialog(null, "Verifique os campos e tente novamente...");
        }
        else{
            try{
                int idade = Integer.parseInt(number);
                int escolha = JOptionPane.showConfirmDialog(null, "Confirmar Cadastro?", "Cadastrar", JOptionPane.YES_NO_OPTION);
                if(escolha == JOptionPane.YES_OPTION){
                    if(saudeComboBox.getSelectedItem().equals("Sim")){
                        boolean sim = true;
                        Pessoa p = new Pessoa(cpf, nome, idade, sim, endereco);
                        DAO dao = new DAO();
                        if(dao.verificarCPFPes(p)){
                            JOptionPane.showMessageDialog(null, "Paciente já cadastrada");
                        }
                        else{
                            p.definirPrioridade(p);
                            dao.adicionarPessoa(p);
                            JOptionPane.showMessageDialog(null, "Paciente cadastrado com sucesso");
                            obterPessoa();
                            cpfTextField.setText("");
                            nomeTextField.setText("");
                            idadeTextField.setText("");
                            enderecoTextField.setText("");
                        }
                    }
                    else if(saudeComboBox.getSelectedItem().equals("Não")){
                        boolean nao = false;
                        Pessoa p = new Pessoa(cpf, nome, idade, nao, endereco);
                        DAO dao = new DAO();
                        if(dao.verificarCPFPes(p)){
                            JOptionPane.showMessageDialog(null, "Paciente já cadastrado");
                        }
                        else{
                            p.definirPrioridade(p);
                            dao.adicionarPessoa(p);
                            JOptionPane.showMessageDialog(null, "Paciente cadastrada com sucesso");
                            obterPessoa();
                            cpfTextField.setText("");
                            nomeTextField.setText("");
                            idadeTextField.setText("");
                            enderecoTextField.setText("");
                        }
                    }
  
                }   
            }
            catch (Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Sistema indisponível, tente novamente mais tarde...");
            }
        }
    }//GEN-LAST:event_novoButtonActionPerformed

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        int escolha = JOptionPane.showConfirmDialog(null, "Deseja remover paciente?", "Remover", JOptionPane.YES_NO_OPTION);
            if (escolha == JOptionPane.YES_OPTION){
            try{
                int id = (Integer.parseInt(idTextField.getText()));
                Pessoa p = new Pessoa(id);
                DAO dao = new DAO();
                dao.removerPessoa(p);
                JOptionPane.showMessageDialog(null, "Paciente removido com sucesso!");
                obterPessoa();
                cpfTextField.setText("");
                nomeTextField.setText("");
                idadeTextField.setText("");
                enderecoTextField.setText("");
                saudeComboBox.setSelectedIndex(0);
                }
                catch (Exception e){
                    JOptionPane.showMessageDialog(null, "Sistema indisponível, tente novamente mais tarde...");
                e.printStackTrace();
            }
        }        
    }//GEN-LAST:event_removerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaGerenciarPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizarButton;
    private javax.swing.JComboBox<Pessoa> buscarComboBox;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JTextField cpfTextField;
    private javax.swing.JLabel enderecoLabel;
    private javax.swing.JTextField enderecoTextField;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel idadeLabel;
    private javax.swing.JTextField idadeTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JButton novoButton;
    private javax.swing.JLabel profissaoLabel;
    private javax.swing.JButton removerButton;
    private javax.swing.JComboBox<String> saudeComboBox;
    private javax.swing.JToggleButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
